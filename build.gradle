
plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
		 id "com.palantir.docker" version "0.32.0"
		 id 'eclipse'
		 id 'project-report'
}






group = 'com.udemy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
implementation group:'org.springframework.boot',name:'spring-boot-starter-web' 
 
 //implementation group:'org.slf4j',name: 'slf4j-simple'
 
	compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
   // https://mvnrepository.com/artifact/org.postgresql/postgresql
implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

implementation group: 'com.intuit.karate', name: 'karate-apache', version: '0.6.0'

implementation group: 'com.intuit.karate', name: 'karate-junit4', version: '0.6.0'
implementation group:'org.liquibase',name:'liquibase-core'
//implementation group:'io.springfox',name:'springfox-boot-starter',version:'3.0.0'
//implementation group:'io.springfox',name:'springfox-swagger-ui',version:'2.9.2'
implementation group:'org.springdoc',name:'springdoc-openapi-ui',version:'1.6.6'

//implementation group: 'org.apache.logging.log4j',name: 'log4j-api',version:'2.7'
//implementation group: 'org.apache.logging.log4j',name: 'log4j-core',version:'2.7'

//implementation group: 'org.apache.logging.log4j',name: 'log4j-slf4j-impl',version:'2.7'
//implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.0'
//	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

}



tasks.named('test') {
	useJUnitPlatform()
}

docker {
    
  // bootJar.baseName resolves to the artifact name, without version and extension information
  name "quartz/${bootJar.baseName}"

  // by default the image will be tagged with "latest", to tag it with the project version use:
  // name "${dockerNamespace}/${bootJar.baseName}:${version}"

  dockerfile file('src/main/docker/Dockerfile')

  // bootJar.archivePath resolves to the absolute path of the artifact file
  files bootJar.archivePath

  // bootJar.archiveName resolves to the artifact name, including version and extension
  //buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

tasks.getByPath('docker').dependsOn('build')